name: Email action

on:
  workflow_dispatch:  

jobs:
  Job1:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo test
          echo ${{ job.status }}
          JOB_ID=${{ github.job }}
          echo $JOB_ID is JOB_ID
          
          
  Job2:
    needs: Job1
    uses: ./.github/workflows/child.yml
    
  Job3:
    runs-on: ubuntu-latest
    outputs:
        STATUSVALUE: ${{ steps.email.outputs.STATUSVALUE }}
        ErrorDetails: ${{ steps.email.outputs.ErrorDetails }}
    if: always()
    needs: [Job1,Job2]
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-west-1
      
      - name: Checkout
        uses: actions/checkout@v3
      
      - run: |
          pwd
          ls -lrta
          
      - name: checking job status
        if: always()
        run: |
          echo ${{ job.status }}
          JOB_ID=${{ github.job }}
          echo $JOB_ID is JOB_ID
      
      - name: Get workflow run details
        id: email
        run: |                
         gh run view ${{ github.run_id }} >> runDetails.txt
         echo ----------------------------------
         cat runDetails.txt
         echo -----------------------------------
         if grep -q '^X ' runDetails.txt
          then
             STATUSVALUE="failed"
             echo --------------Failure cause and Failed Job------------------
             ErrorDetails=$(grep -A5000 -m1 -e 'ANNOTATIONS' runDetails.txt)
             echo $ErrorDetails
          else
             STATUSVALUE="success"
          fi
          echo "STATUSVALUE=$STATUSVALUE" >> $GITHUB_OUTPUT
         
        env:
            GH_TOKEN: ${{ github.token }}
                   
      - name: Edit json file
        run: |
          Runid=${{ github.run_id }}
          #echo -------------------------
          #curl -s "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          #echo ------------------------------
          JobName=$(curl -s "https://api.github.com/repos/2115-27/hello-world-npm/actions/runs/${Runid}" | jq -r '.name' )
          BuildNumber=${{ github.run_number }}
          GITHUB_WORKFLOW_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          RepoName=${{ github.repository }}
          BranchName=${{ github.ref_name }}
          STATUSVALUE=${{ steps.email.outputs.STATUSVALUE }}
          ErrorDetails=$(grep -A5000 -m1 -e 'ANNOTATIONS' runDetails.txt)
          echo $STATUSVALUE is STATUSVALUE
          echo $JobName is JobName
         
          sed -i "s#RepoNameValue#$RepoName#g" message.json
          sed -i "s#JobName#$JobName#g" message.json
          sed -i "s#STATUSVALUE#$STATUSVALUE#g" message.json
          sed -i "s#ErrorDetails#'$ErrorDetails'#g" message.json
          sed -i "s#BranchValue#$BranchName#g" message.json
          sed -i "s#BuildNoValue#$BuildNumber#g" message.json
          sed -i "s#buildurl#$GITHUB_WORKFLOW_URL#g" message.json
      
      - name: Step1
        run: |
          aws ses send-email --from athulyams2000@gmail.com --destination ToAddresses=athulyams2000@gmail.com --message file://message.json
          
          
          
