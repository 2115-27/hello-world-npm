name: Email action

on:
  workflow_dispatch:  

jobs:
  Job1:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo test
          echo ${{ job.status }}
          JOB_ID=${{ github.job }}
          echo $JOB_ID is JOB_ID
          
  Job2:
    runs-on: ubuntu-latest
    needs: Job1
    steps:
      - run: |
          exit 1      
  Job3:
    runs-on: ubuntu-latest
    if: always()
    needs: [Job1,Job2]
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-west-1
      
      - name: Checkout
        uses: actions/checkout@v3
      
      - run: |
          pwd
          ls -lrta
          
      - name: checking job status
        if: always()
        run: |
          echo ${{ job.status }}
          JOB_ID=${{ github.job }}
          echo $JOB_ID is JOB_ID
      
      - name: Get workflow run details
        run: |
          
      
          failed_job=$(gh run view ${{ github.run_id }} | grep -oP 'X \K\S+(?=\s+in)')

          # Extract failed step name
          failed_step=$(gh run view ${{ github.run_id }} | grep -oP 'X \K\S+(?=\s+$)')

          # Extract annotations/error message
          annotations=$(gh run view ${{ github.run_id }} | awk '/^X/{flag=1; next} /^ /{flag=0} flag')

          echo "Failed Job= $failed_job"
          echo "Failed Step= $failed_step"
          echo "Annotations/Error Message= $annotations"

        env:
            GH_TOKEN: ${{ github.token }}
            
   
          
#       - name: Edit json file
#         run: |
#           Runid=${{ github.run_id }}
#           echo -------------------------
#           curl -s "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}"
#           echo ------------------------------
#           JobName=$(curl -s "https://api.github.com/repos/2115-27/hello-world-npm/actions/runs/${Runid}" | jq -r '.name' )
#           BuildNumber=${{ github.run_number }}
#           GITHUB_WORKFLOW_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
#           RepoName=${{ github.repository }}
#           BranchName=${{ github.ref_name }}
#           echo $JobName is JobName
         
#           sed -i "s#RepoNameValue#$RepoName#g" message.json
#           sed -i "s#JobName#$JobName#g" message.json
#           sed -i "s#BranchValue#$BranchName#g" message.json
#           sed -i "s#BuildNoValue#$BuildNumber#g" message.json
#           sed -i "s#buildurl#$GITHUB_WORKFLOW_URL#g" message.json
      
#       - name: Step1
#         run: |
#           aws ses send-email --from athulyams2000@gmail.com --destination ToAddresses=athulyams2000@gmail.com --message file://message.json
          
          
          
