name: Node

on:
  workflow_dispatch:  
   inputs:
    snapshot:
      type: boolean
      description: choose 1.0-snapshot as version
    
permissions:
  contents: write
  packages: write 
  
jobs:
  Set_Release_Version:
    runs-on: ubuntu-latest
    outputs:
      currentversion: ${{ steps.version.outputs.currentversion }}     
    steps:
       - uses: actions/checkout@v2
       - id: version
         run: |
            if [[ ${{ github.event.inputs.snapshot }} == 'true' ]];then
              ReleaseVersion="1.0-SNAPSHOT"
              echo "::set-output name=currentversion::$ReleaseVersion"
            else
              cat version.cfg
              echo "${{ github.run_number }}" >> version.cfg
              newversion=$(cat version.cfg | tr -d "[:space:]")
              echo $newversion is the version
              echo "::set-output name=currentversion::$newversion"
            fi   
  build:
    needs: Set_Release_Version
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 16
      uses: actions/setup-node@v3
      with:
          node-version: '16'
          registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file
          scope: '@2115-27'
    - run: echo ${{needs.Set_Release_Version.outputs.currentversion}}
    
    - run: |
        echo ${{needs.Set_Release_Version.outputs.currentversion}}
        npm run build --if-present
        ls -lrta
        cp -R foldertocopy Destdirectory 
        cp package.json Destdirectory
       
    - run:  echo refs/tags/${{needs.Set_Release_Version.outputs.currentversion}} 
    - name: Create tag
      uses: actions/github-script@v5
      with:
        script: |
          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: 'refs/tags/${{needs.Set_Release_Version.outputs.currentversion}}',
            sha: context.sha
          })
   
    - name: Create Github Release
      id: create_release
      uses: actions/create-release@v1
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
         tag_name: ${{needs.Set_Release_Version.outputs.version}}
         release_name: AppName-${{needs.Set_Release_Version.outputs.version}}
         
    - name: Upload Artifacts to Github Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./AppName.zip
          asset_name: cpqapps${{needs.Set_Release_Version.outputs.version}}.zip
          asset_content_type: application/zip

    env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            
       
