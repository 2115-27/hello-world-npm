name: Upload

on:
  workflow_dispatch:  
   inputs:
    snapshot:
      type: boolean
      description: choose 1.0-SNAPSHOT as version
      
permissions:
    contents: write
    packages: write 
  
jobs:        

  Upload-artifact:
    runs-on: ubuntu-latest
    steps:
      - run: |
          mkdir downloads
          mkdir directory
          ls -lrta
          cd directory/
          touch file1.txt file2.txt  
          ls -lrta
          
      - uses: actions/upload-artifact@v3
        with:
          name: 22.02.000
          path: ./directory 
          retention-days: 1
          
  Download-artifact:
    runs-on: ubuntu-latest
    needs: Upload-artifact
    steps: 
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        with:
          name: 22.02.000
          path: ./downloads
          
      - name: Display structure of downloaded files
        run: |
          ls -R
          ls -lrta
          
      - name: Zip package 
        id: zip
        run: |
            ls -lrta
            if [ ${{needs.Set_Release_Version.outputs.currentversion}} == '1.0-SNAPSHOT' ]; then
             7z a cpqui-artifact.zip ./downloads
             echo "::set-output name=artifactname::cpqui-artifact.zip"
            else 
             7z a cpqui-artifact-nightly.zip ./downloads
             echo "::set-output name=artifactname::cpqui-artifact-nightly.zip"
            fi  
            
            ls -lrta   
      - name: test
        run: echo ${{steps.run_tests.outputs.*}} is the artifact name
        
#       - name: Create Github Release
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#            tag_name: ${{needs.Set_Release_Version.outputs.currentversion}}
#            release_name: cpqui-${{needs.Set_Release_Version.outputs.currentversion}}

#       - name: Upload Artifacts to Github Release
#         uses: actions/upload-release-asset@v1
#         env:
#            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#             upload_url: ${{ steps.create_release.outputs.upload_url }}
#             asset_path: ./${{steps.run_tests.outputs.artifactname}}
#             asset_name: cpqui-${{needs.Set_Release_Version.outputs.currentversion}}.zip
#             asset_content_type: application/zip    
